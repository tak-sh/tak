// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: api/script/v1beta1/script.proto

package v1beta1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Component_Input_Type int32

const (
	Component_Input_TEXT     Component_Input_Type = 0
	Component_Input_PASSWORD Component_Input_Type = 1
)

// Enum value maps for Component_Input_Type.
var (
	Component_Input_Type_name = map[int32]string{
		0: "TEXT",
		1: "PASSWORD",
	}
	Component_Input_Type_value = map[string]int32{
		"TEXT":     0,
		"PASSWORD": 1,
	}
)

func (x Component_Input_Type) Enum() *Component_Input_Type {
	p := new(Component_Input_Type)
	*p = x
	return p
}

func (x Component_Input_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Component_Input_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_script_v1beta1_script_proto_enumTypes[0].Descriptor()
}

func (Component_Input_Type) Type() protoreflect.EnumType {
	return &file_api_script_v1beta1_script_proto_enumTypes[0]
}

func (x Component_Input_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Component_Input_Type.Descriptor instead.
func (Component_Input_Type) EnumDescriptor() ([]byte, []int) {
	return file_api_script_v1beta1_script_proto_rawDescGZIP(), []int{4, 1, 0}
}

type ConditionalSignal_Signal int32

const (
	ConditionalSignal_unknown ConditionalSignal_Signal = 0
	// A terminating signal that the operation is complete.
	ConditionalSignal_success ConditionalSignal_Signal = 1
	// A terminating signal that an error has occurred.
	ConditionalSignal_error ConditionalSignal_Signal = 2
)

// Enum value maps for ConditionalSignal_Signal.
var (
	ConditionalSignal_Signal_name = map[int32]string{
		0: "unknown",
		1: "success",
		2: "error",
	}
	ConditionalSignal_Signal_value = map[string]int32{
		"unknown": 0,
		"success": 1,
		"error":   2,
	}
)

func (x ConditionalSignal_Signal) Enum() *ConditionalSignal_Signal {
	p := new(ConditionalSignal_Signal)
	*p = x
	return p
}

func (x ConditionalSignal_Signal) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConditionalSignal_Signal) Descriptor() protoreflect.EnumDescriptor {
	return file_api_script_v1beta1_script_proto_enumTypes[1].Descriptor()
}

func (ConditionalSignal_Signal) Type() protoreflect.EnumType {
	return &file_api_script_v1beta1_script_proto_enumTypes[1]
}

func (x ConditionalSignal_Signal) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConditionalSignal_Signal.Descriptor instead.
func (ConditionalSignal_Signal) EnumDescriptor() ([]byte, []int) {
	return file_api_script_v1beta1_script_proto_rawDescGZIP(), []int{10, 0}
}

// A way to programmatically control what the headless browser should do.
type Script struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steps   []*Step              `protobuf:"bytes,1,rep,name=steps,proto3" json:"steps,omitempty"`
	Signals []*ConditionalSignal `protobuf:"bytes,2,rep,name=signals,proto3" json:"signals,omitempty"`
}

func (x *Script) Reset() {
	*x = Script{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_script_v1beta1_script_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Script) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Script) ProtoMessage() {}

func (x *Script) ProtoReflect() protoreflect.Message {
	mi := &file_api_script_v1beta1_script_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Script.ProtoReflect.Descriptor instead.
func (*Script) Descriptor() ([]byte, []int) {
	return file_api_script_v1beta1_script_proto_rawDescGZIP(), []int{0}
}

func (x *Script) GetSteps() []*Step {
	if x != nil {
		return x.Steps
	}
	return nil
}

func (x *Script) GetSignals() []*ConditionalSignal {
	if x != nil {
		return x.Signals
	}
	return nil
}

// A single line within a Script.
type Step struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A top-level referential key for the Step. If not provided, the result is not
	// stored nor is it accessible by following Steps. If it is provided, any following
	// Step can refer to the value returned by the Action.
	Id *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	// Provide the action that should be taken for this Step.
	Action *Action `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	// Optional list of signals that can be triggered based on what is being shown
	// on the page or the overall state of the step.
	Signals []*ConditionalSignal `protobuf:"bytes,3,rep,name=signals,proto3" json:"signals,omitempty"`
}

func (x *Step) Reset() {
	*x = Step{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_script_v1beta1_script_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Step) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Step) ProtoMessage() {}

func (x *Step) ProtoReflect() protoreflect.Message {
	mi := &file_api_script_v1beta1_script_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Step.ProtoReflect.Descriptor instead.
func (*Step) Descriptor() ([]byte, []int) {
	return file_api_script_v1beta1_script_proto_rawDescGZIP(), []int{1}
}

func (x *Step) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Step) GetAction() *Action {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *Step) GetSignals() []*ConditionalSignal {
	if x != nil {
		return x.Signals
	}
	return nil
}

type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Click on an element.
	MouseClick *Action_MouseClick `protobuf:"bytes,1,opt,name=mouse_click,proto3,oneof" json:"mouse_click,omitempty"`
	// Input some text into an element.
	Input *Action_Input `protobuf:"bytes,2,opt,name=input,proto3,oneof" json:"input,omitempty"`
	// Ask the user for some information.
	Ask    *Action_PromptUser `protobuf:"bytes,3,opt,name=ask,proto3,oneof" json:"ask,omitempty"`
	Nav    *Action_Nav        `protobuf:"bytes,4,opt,name=nav,proto3,oneof" json:"nav,omitempty"`
	Branch *Action_Branch     `protobuf:"bytes,5,opt,name=branch,proto3,oneof" json:"branch,omitempty"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_script_v1beta1_script_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_api_script_v1beta1_script_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_api_script_v1beta1_script_proto_rawDescGZIP(), []int{2}
}

func (x *Action) GetMouseClick() *Action_MouseClick {
	if x != nil {
		return x.MouseClick
	}
	return nil
}

func (x *Action) GetInput() *Action_Input {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *Action) GetAsk() *Action_PromptUser {
	if x != nil {
		return x.Ask
	}
	return nil
}

func (x *Action) GetNav() *Action_Nav {
	if x != nil {
		return x.Nav
	}
	return nil
}

func (x *Action) GetBranch() *Action_Branch {
	if x != nil {
		return x.Branch
	}
	return nil
}

type Prompt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A user-friendly description for what you're asking. This is displayed above the component.
	Description *string `protobuf:"bytes,1,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// A user-friendly and short title for the prompt.
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// The component to display to the user.
	Component *Component `protobuf:"bytes,3,opt,name=component,proto3" json:"component,omitempty"`
}

func (x *Prompt) Reset() {
	*x = Prompt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_script_v1beta1_script_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prompt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prompt) ProtoMessage() {}

func (x *Prompt) ProtoReflect() protoreflect.Message {
	mi := &file_api_script_v1beta1_script_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prompt.ProtoReflect.Descriptor instead.
func (*Prompt) Descriptor() ([]byte, []int) {
	return file_api_script_v1beta1_script_proto_rawDescGZIP(), []int{3}
}

func (x *Prompt) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Prompt) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Prompt) GetComponent() *Component {
	if x != nil {
		return x.Component
	}
	return nil
}

// Mutually exclusive set of components that can be displayed to the user. Only a single field
// can be set.
type Component struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dropdown *Component_Dropdown `protobuf:"bytes,1,opt,name=dropdown,proto3,oneof" json:"dropdown,omitempty"`
	Input    *Component_Input    `protobuf:"bytes,2,opt,name=input,proto3,oneof" json:"input,omitempty"`
}

func (x *Component) Reset() {
	*x = Component{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_script_v1beta1_script_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Component) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Component) ProtoMessage() {}

func (x *Component) ProtoReflect() protoreflect.Message {
	mi := &file_api_script_v1beta1_script_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Component.ProtoReflect.Descriptor instead.
func (*Component) Descriptor() ([]byte, []int) {
	return file_api_script_v1beta1_script_proto_rawDescGZIP(), []int{4}
}

func (x *Component) GetDropdown() *Component_Dropdown {
	if x != nil {
		return x.Dropdown
	}
	return nil
}

func (x *Component) GetInput() *Component_Input {
	if x != nil {
		return x.Input
	}
	return nil
}

// A dynamic primitive value. All fields are mutually exclusive.
type Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Str     *string  `protobuf:"bytes,1,opt,name=str,proto3,oneof" json:"str,omitempty"`
	StrList []string `protobuf:"bytes,2,rep,name=str_list,proto3" json:"str_list,omitempty"`
}

func (x *Value) Reset() {
	*x = Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_script_v1beta1_script_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_api_script_v1beta1_script_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_api_script_v1beta1_script_proto_rawDescGZIP(), []int{5}
}

func (x *Value) GetStr() string {
	if x != nil && x.Str != nil {
		return *x.Str
	}
	return ""
}

func (x *Value) GetStrList() []string {
	if x != nil {
		return x.StrList
	}
	return nil
}

// Selects specific fields for each element of a matching query. This functions like the each function
// in jQuery: https://api.jquery.com/jquery.each/.
type EachSelector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A selector string that matches the list of elements.
	ListSelector string `protobuf:"bytes,1,opt,name=list_selector,proto3" json:"list_selector,omitempty"`
	// A selector string that is called on every element returned from Selector that aims to
	// extract the desired value from the element.
	Iterator string `protobuf:"bytes,2,opt,name=iterator,proto3" json:"iterator,omitempty"`
}

func (x *EachSelector) Reset() {
	*x = EachSelector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_script_v1beta1_script_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EachSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EachSelector) ProtoMessage() {}

func (x *EachSelector) ProtoReflect() protoreflect.Message {
	mi := &file_api_script_v1beta1_script_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EachSelector.ProtoReflect.Descriptor instead.
func (*EachSelector) Descriptor() ([]byte, []int) {
	return file_api_script_v1beta1_script_proto_rawDescGZIP(), []int{6}
}

func (x *EachSelector) GetListSelector() string {
	if x != nil {
		return x.ListSelector
	}
	return ""
}

func (x *EachSelector) GetIterator() string {
	if x != nil {
		return x.Iterator
	}
	return ""
}

type HTMLNodeTemplateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The stringified child of the element.
	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// The attributes on the HTML node.
	Attrs map[string]*HTMLNodeTemplateData_Attribute `protobuf:"bytes,2,rep,name=attrs,proto3" json:"attrs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The element type e.g. span
	Element string `protobuf:"bytes,3,opt,name=element,proto3" json:"element,omitempty"`
}

func (x *HTMLNodeTemplateData) Reset() {
	*x = HTMLNodeTemplateData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_script_v1beta1_script_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTMLNodeTemplateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTMLNodeTemplateData) ProtoMessage() {}

func (x *HTMLNodeTemplateData) ProtoReflect() protoreflect.Message {
	mi := &file_api_script_v1beta1_script_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTMLNodeTemplateData.ProtoReflect.Descriptor instead.
func (*HTMLNodeTemplateData) Descriptor() ([]byte, []int) {
	return file_api_script_v1beta1_script_proto_rawDescGZIP(), []int{7}
}

func (x *HTMLNodeTemplateData) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *HTMLNodeTemplateData) GetAttrs() map[string]*HTMLNodeTemplateData_Attribute {
	if x != nil {
		return x.Attrs
	}
	return nil
}

func (x *HTMLNodeTemplateData) GetElement() string {
	if x != nil {
		return x.Element
	}
	return ""
}

type BrowserTemplateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The current URL for the browser.
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// The raw HTML of the page.
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *BrowserTemplateData) Reset() {
	*x = BrowserTemplateData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_script_v1beta1_script_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrowserTemplateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrowserTemplateData) ProtoMessage() {}

func (x *BrowserTemplateData) ProtoReflect() protoreflect.Message {
	mi := &file_api_script_v1beta1_script_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrowserTemplateData.ProtoReflect.Descriptor instead.
func (*BrowserTemplateData) Descriptor() ([]byte, []int) {
	return file_api_script_v1beta1_script_proto_rawDescGZIP(), []int{8}
}

func (x *BrowserTemplateData) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *BrowserTemplateData) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ScriptTemplateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A step ID mapped to the resulting value.
	Step    map[string]string    `protobuf:"bytes,1,rep,name=step,proto3" json:"step,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Browser *BrowserTemplateData `protobuf:"bytes,2,opt,name=browser,proto3" json:"browser,omitempty"`
	// If a particular element from the page is being targeted, this will be available
	// as a template variable.
	Element *HTMLNodeTemplateData `protobuf:"bytes,3,opt,name=element,proto3" json:"element,omitempty"`
	// If within the context of a Dropdown component, e.g. when evaluating the if condition,
	// this field will be made available.
	Option *Component_Dropdown_Option `protobuf:"bytes,4,opt,name=option,proto3" json:"option,omitempty"`
}

func (x *ScriptTemplateData) Reset() {
	*x = ScriptTemplateData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_script_v1beta1_script_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScriptTemplateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScriptTemplateData) ProtoMessage() {}

func (x *ScriptTemplateData) ProtoReflect() protoreflect.Message {
	mi := &file_api_script_v1beta1_script_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScriptTemplateData.ProtoReflect.Descriptor instead.
func (*ScriptTemplateData) Descriptor() ([]byte, []int) {
	return file_api_script_v1beta1_script_proto_rawDescGZIP(), []int{9}
}

func (x *ScriptTemplateData) GetStep() map[string]string {
	if x != nil {
		return x.Step
	}
	return nil
}

func (x *ScriptTemplateData) GetBrowser() *BrowserTemplateData {
	if x != nil {
		return x.Browser
	}
	return nil
}

func (x *ScriptTemplateData) GetElement() *HTMLNodeTemplateData {
	if x != nil {
		return x.Element
	}
	return nil
}

func (x *ScriptTemplateData) GetOption() *Component_Dropdown_Option {
	if x != nil {
		return x.Option
	}
	return nil
}

// Signals that something has happened based on if a condition returns a truthy
// value.
type ConditionalSignal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If a truthy value is set, the Signal is sent.
	If string `protobuf:"bytes,1,opt,name=if,proto3" json:"if,omitempty"`
	// The signal that will be sent if the condition is met.
	Signal ConditionalSignal_Signal `protobuf:"varint,2,opt,name=signal,proto3,enum=tak.sh.api.script.v1beta1.ConditionalSignal_Signal" json:"signal,omitempty"`
	// An optional message providing more context as to why the signal occurred.
	Message *string `protobuf:"bytes,3,opt,name=message,proto3,oneof" json:"message,omitempty"`
}

func (x *ConditionalSignal) Reset() {
	*x = ConditionalSignal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_script_v1beta1_script_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConditionalSignal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConditionalSignal) ProtoMessage() {}

func (x *ConditionalSignal) ProtoReflect() protoreflect.Message {
	mi := &file_api_script_v1beta1_script_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConditionalSignal.ProtoReflect.Descriptor instead.
func (*ConditionalSignal) Descriptor() ([]byte, []int) {
	return file_api_script_v1beta1_script_proto_rawDescGZIP(), []int{10}
}

func (x *ConditionalSignal) GetIf() string {
	if x != nil {
		return x.If
	}
	return ""
}

func (x *ConditionalSignal) GetSignal() ConditionalSignal_Signal {
	if x != nil {
		return x.Signal
	}
	return ConditionalSignal_unknown
}

func (x *ConditionalSignal) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

// A field representing the value of an Action.
type Action_Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Hardcode the value for the action.
	Raw string `protobuf:"bytes,1,opt,name=raw,proto3" json:"raw,omitempty"`
}

func (x *Action_Value) Reset() {
	*x = Action_Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_script_v1beta1_script_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_Value) ProtoMessage() {}

func (x *Action_Value) ProtoReflect() protoreflect.Message {
	mi := &file_api_script_v1beta1_script_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_Value.ProtoReflect.Descriptor instead.
func (*Action_Value) Descriptor() ([]byte, []int) {
	return file_api_script_v1beta1_script_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Action_Value) GetRaw() string {
	if x != nil {
		return x.Raw
	}
	return ""
}

// Click on an element.
type Action_MouseClick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Selector string `protobuf:"bytes,1,opt,name=selector,proto3" json:"selector,omitempty"`
	// If true, the mouse will double click.
	Double *bool `protobuf:"varint,2,opt,name=double,proto3,oneof" json:"double,omitempty"`
}

func (x *Action_MouseClick) Reset() {
	*x = Action_MouseClick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_script_v1beta1_script_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_MouseClick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_MouseClick) ProtoMessage() {}

func (x *Action_MouseClick) ProtoReflect() protoreflect.Message {
	mi := &file_api_script_v1beta1_script_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_MouseClick.ProtoReflect.Descriptor instead.
func (*Action_MouseClick) Descriptor() ([]byte, []int) {
	return file_api_script_v1beta1_script_proto_rawDescGZIP(), []int{2, 1}
}

func (x *Action_MouseClick) GetSelector() string {
	if x != nil {
		return x.Selector
	}
	return ""
}

func (x *Action_MouseClick) GetDouble() bool {
	if x != nil && x.Double != nil {
		return *x.Double
	}
	return false
}

// Input text into a field.
type Action_Input struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Selector string `protobuf:"bytes,1,opt,name=selector,proto3" json:"selector,omitempty"`
	// Provide a value for the input action. This could be hardcoded or a variable reference.
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Action_Input) Reset() {
	*x = Action_Input{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_script_v1beta1_script_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_Input) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_Input) ProtoMessage() {}

func (x *Action_Input) ProtoReflect() protoreflect.Message {
	mi := &file_api_script_v1beta1_script_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_Input.ProtoReflect.Descriptor instead.
func (*Action_Input) Descriptor() ([]byte, []int) {
	return file_api_script_v1beta1_script_proto_rawDescGZIP(), []int{2, 2}
}

func (x *Action_Input) GetSelector() string {
	if x != nil {
		return x.Selector
	}
	return ""
}

func (x *Action_Input) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Action_Nav struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A URL to navigate to.
	Addr string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *Action_Nav) Reset() {
	*x = Action_Nav{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_script_v1beta1_script_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_Nav) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_Nav) ProtoMessage() {}

func (x *Action_Nav) ProtoReflect() protoreflect.Message {
	mi := &file_api_script_v1beta1_script_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_Nav.ProtoReflect.Descriptor instead.
func (*Action_Nav) Descriptor() ([]byte, []int) {
	return file_api_script_v1beta1_script_proto_rawDescGZIP(), []int{2, 3}
}

func (x *Action_Nav) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

// Prompt the user for some data.
type Action_PromptUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prompt *Prompt `protobuf:"bytes,1,opt,name=prompt,proto3" json:"prompt,omitempty"`
}

func (x *Action_PromptUser) Reset() {
	*x = Action_PromptUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_script_v1beta1_script_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_PromptUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_PromptUser) ProtoMessage() {}

func (x *Action_PromptUser) ProtoReflect() protoreflect.Message {
	mi := &file_api_script_v1beta1_script_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_PromptUser.ProtoReflect.Descriptor instead.
func (*Action_PromptUser) Descriptor() ([]byte, []int) {
	return file_api_script_v1beta1_script_proto_rawDescGZIP(), []int{2, 4}
}

func (x *Action_PromptUser) GetPrompt() *Prompt {
	if x != nil {
		return x.Prompt
	}
	return nil
}

// A group of actions to execute.
type Action_Branch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If the field is truthy, this Branch will be taken.
	If string `protobuf:"bytes,1,opt,name=if,proto3" json:"if,omitempty"`
	// The steps that are executed as part of this Branch
	Steps []*Step `protobuf:"bytes,2,rep,name=steps,proto3" json:"steps,omitempty"`
}

func (x *Action_Branch) Reset() {
	*x = Action_Branch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_script_v1beta1_script_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action_Branch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action_Branch) ProtoMessage() {}

func (x *Action_Branch) ProtoReflect() protoreflect.Message {
	mi := &file_api_script_v1beta1_script_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action_Branch.ProtoReflect.Descriptor instead.
func (*Action_Branch) Descriptor() ([]byte, []int) {
	return file_api_script_v1beta1_script_proto_rawDescGZIP(), []int{2, 5}
}

func (x *Action_Branch) GetIf() string {
	if x != nil {
		return x.If
	}
	return ""
}

func (x *Action_Branch) GetSteps() []*Step {
	if x != nil {
		return x.Steps
	}
	return nil
}

// Choose from a set of predefined options.
type Component_Dropdown struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options []*Component_Dropdown_Option `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
	// A variable reference that populates the options. If the options field is also set, this
	// is appended to it. Useful if you want to dynamically create a dropdown from an arbitrary
	// list of options on the page.
	From *Component_Dropdown_FromSpec `protobuf:"bytes,2,opt,name=from,proto3,oneof" json:"from,omitempty"`
	// If specified, merge the specified fields into every option for the Dropdown.
	Merge []*Component_Dropdown_OptionMerge `protobuf:"bytes,3,rep,name=merge,proto3" json:"merge,omitempty"`
}

func (x *Component_Dropdown) Reset() {
	*x = Component_Dropdown{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_script_v1beta1_script_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Component_Dropdown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Component_Dropdown) ProtoMessage() {}

func (x *Component_Dropdown) ProtoReflect() protoreflect.Message {
	mi := &file_api_script_v1beta1_script_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Component_Dropdown.ProtoReflect.Descriptor instead.
func (*Component_Dropdown) Descriptor() ([]byte, []int) {
	return file_api_script_v1beta1_script_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Component_Dropdown) GetOptions() []*Component_Dropdown_Option {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *Component_Dropdown) GetFrom() *Component_Dropdown_FromSpec {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Component_Dropdown) GetMerge() []*Component_Dropdown_OptionMerge {
	if x != nil {
		return x.Merge
	}
	return nil
}

type Component_Input struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Defaults to TEXT.
	Type Component_Input_Type `protobuf:"varint,1,opt,name=type,proto3,enum=tak.sh.api.script.v1beta1.Component_Input_Type" json:"type,omitempty"`
}

func (x *Component_Input) Reset() {
	*x = Component_Input{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_script_v1beta1_script_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Component_Input) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Component_Input) ProtoMessage() {}

func (x *Component_Input) ProtoReflect() protoreflect.Message {
	mi := &file_api_script_v1beta1_script_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Component_Input.ProtoReflect.Descriptor instead.
func (*Component_Input) Descriptor() ([]byte, []int) {
	return file_api_script_v1beta1_script_proto_rawDescGZIP(), []int{4, 1}
}

func (x *Component_Input) GetType() Component_Input_Type {
	if x != nil {
		return x.Type
	}
	return Component_Input_TEXT
}

type Component_Dropdown_Option struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A hardcoded value for the option. Accepts a variable reference.
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// If true, the option is not shown.
	Hidden *bool `protobuf:"varint,2,opt,name=hidden,proto3,oneof" json:"hidden,omitempty"`
	// If true, the option is not selectable.
	Disabled *bool `protobuf:"varint,3,opt,name=disabled,proto3,oneof" json:"disabled,omitempty"`
	// If provided, the option shows the given text. If not, the value
	// field is shown.
	Text *string `protobuf:"bytes,4,opt,name=text,proto3,oneof" json:"text,omitempty"`
}

func (x *Component_Dropdown_Option) Reset() {
	*x = Component_Dropdown_Option{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_script_v1beta1_script_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Component_Dropdown_Option) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Component_Dropdown_Option) ProtoMessage() {}

func (x *Component_Dropdown_Option) ProtoReflect() protoreflect.Message {
	mi := &file_api_script_v1beta1_script_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Component_Dropdown_Option.ProtoReflect.Descriptor instead.
func (*Component_Dropdown_Option) Descriptor() ([]byte, []int) {
	return file_api_script_v1beta1_script_proto_rawDescGZIP(), []int{4, 0, 0}
}

func (x *Component_Dropdown_Option) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Component_Dropdown_Option) GetHidden() bool {
	if x != nil && x.Hidden != nil {
		return *x.Hidden
	}
	return false
}

func (x *Component_Dropdown_Option) GetDisabled() bool {
	if x != nil && x.Disabled != nil {
		return *x.Disabled
	}
	return false
}

func (x *Component_Dropdown_Option) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

type Component_Dropdown_OptionMerge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If truthy, the Option field is applied to every Dropdown option.
	If *string `protobuf:"bytes,1,opt,name=if,proto3,oneof" json:"if,omitempty"`
	// The fields to merge into the Dropdown options.
	Option *Component_Dropdown_Option `protobuf:"bytes,2,opt,name=option,proto3" json:"option,omitempty"`
}

func (x *Component_Dropdown_OptionMerge) Reset() {
	*x = Component_Dropdown_OptionMerge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_script_v1beta1_script_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Component_Dropdown_OptionMerge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Component_Dropdown_OptionMerge) ProtoMessage() {}

func (x *Component_Dropdown_OptionMerge) ProtoReflect() protoreflect.Message {
	mi := &file_api_script_v1beta1_script_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Component_Dropdown_OptionMerge.ProtoReflect.Descriptor instead.
func (*Component_Dropdown_OptionMerge) Descriptor() ([]byte, []int) {
	return file_api_script_v1beta1_script_proto_rawDescGZIP(), []int{4, 0, 1}
}

func (x *Component_Dropdown_OptionMerge) GetIf() string {
	if x != nil && x.If != nil {
		return *x.If
	}
	return ""
}

func (x *Component_Dropdown_OptionMerge) GetOption() *Component_Dropdown_Option {
	if x != nil {
		return x.Option
	}
	return nil
}

type Component_Dropdown_FromSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Selector *EachSelector              `protobuf:"bytes,1,opt,name=selector,proto3" json:"selector,omitempty"`
	Mapper   *Component_Dropdown_Option `protobuf:"bytes,2,opt,name=mapper,proto3" json:"mapper,omitempty"`
}

func (x *Component_Dropdown_FromSpec) Reset() {
	*x = Component_Dropdown_FromSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_script_v1beta1_script_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Component_Dropdown_FromSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Component_Dropdown_FromSpec) ProtoMessage() {}

func (x *Component_Dropdown_FromSpec) ProtoReflect() protoreflect.Message {
	mi := &file_api_script_v1beta1_script_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Component_Dropdown_FromSpec.ProtoReflect.Descriptor instead.
func (*Component_Dropdown_FromSpec) Descriptor() ([]byte, []int) {
	return file_api_script_v1beta1_script_proto_rawDescGZIP(), []int{4, 0, 2}
}

func (x *Component_Dropdown_FromSpec) GetSelector() *EachSelector {
	if x != nil {
		return x.Selector
	}
	return nil
}

func (x *Component_Dropdown_FromSpec) GetMapper() *Component_Dropdown_Option {
	if x != nil {
		return x.Mapper
	}
	return nil
}

type HTMLNodeTemplateData_Attribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val       string `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *HTMLNodeTemplateData_Attribute) Reset() {
	*x = HTMLNodeTemplateData_Attribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_script_v1beta1_script_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTMLNodeTemplateData_Attribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTMLNodeTemplateData_Attribute) ProtoMessage() {}

func (x *HTMLNodeTemplateData_Attribute) ProtoReflect() protoreflect.Message {
	mi := &file_api_script_v1beta1_script_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTMLNodeTemplateData_Attribute.ProtoReflect.Descriptor instead.
func (*HTMLNodeTemplateData_Attribute) Descriptor() ([]byte, []int) {
	return file_api_script_v1beta1_script_proto_rawDescGZIP(), []int{7, 0}
}

func (x *HTMLNodeTemplateData_Attribute) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *HTMLNodeTemplateData_Attribute) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

var File_api_script_v1beta1_script_proto protoreflect.FileDescriptor

var file_api_script_v1beta1_script_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2f, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x19, 0x74, 0x61, 0x6b, 0x2e, 0x73, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x22, 0x87, 0x01, 0x0a,
	0x06, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x35, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x61, 0x6b, 0x2e, 0x73, 0x68, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x12, 0x46,
	0x0a, 0x07, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x74, 0x61, 0x6b, 0x2e, 0x73, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x07, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x22, 0xa5, 0x01, 0x0a, 0x04, 0x53, 0x74, 0x65, 0x70, 0x12,
	0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x61, 0x6b, 0x2e, 0x73, 0x68, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x46, 0x0a, 0x07, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x74, 0x61, 0x6b, 0x2e, 0x73, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x07,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x22, 0xfd,
	0x05, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x53, 0x0a, 0x0b, 0x6d, 0x6f, 0x75,
	0x73, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x74, 0x61, 0x6b, 0x2e, 0x73, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x4d, 0x6f, 0x75, 0x73, 0x65, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0b,
	0x6d, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x42,
	0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x74, 0x61, 0x6b, 0x2e, 0x73, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x48, 0x01, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x43, 0x0a, 0x03, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x74, 0x61, 0x6b, 0x2e, 0x73, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x55, 0x73, 0x65, 0x72, 0x48, 0x02, 0x52,
	0x03, 0x61, 0x73, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x03, 0x6e, 0x61, 0x76, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x61, 0x6b, 0x2e, 0x73, 0x68, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4e, 0x61, 0x76, 0x48, 0x03, 0x52, 0x03, 0x6e,
	0x61, 0x76, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x74, 0x61, 0x6b, 0x2e, 0x73, 0x68, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x48,
	0x04, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x88, 0x01, 0x01, 0x1a, 0x19, 0x0a, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x72, 0x61, 0x77, 0x1a, 0x50, 0x0a, 0x0a, 0x4d, 0x6f, 0x75, 0x73, 0x65,
	0x43, 0x6c, 0x69, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x1b, 0x0a, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x00, 0x52, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x1a, 0x39, 0x0a, 0x05, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x1a, 0x19, 0x0a, 0x03, 0x4e, 0x61, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x61,
	0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x1a,
	0x47, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x39, 0x0a,
	0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x74, 0x61, 0x6b, 0x2e, 0x73, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74,
	0x52, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x1a, 0x4f, 0x0a, 0x06, 0x42, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x66, 0x12, 0x35, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x61, 0x6b, 0x2e, 0x73, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x74,
	0x65, 0x70, 0x52, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6d, 0x6f,
	0x75, 0x73, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x61, 0x73, 0x6b, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x6e, 0x61, 0x76, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x22, 0x99,
	0x01, 0x0a, 0x06, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74, 0x61, 0x6b, 0x2e,
	0x73, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe1, 0x07, 0x0a, 0x09, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x4e, 0x0a, 0x08, 0x64, 0x72, 0x6f, 0x70,
	0x64, 0x6f, 0x77, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x74, 0x61, 0x6b,
	0x2e, 0x73, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x2e, 0x44, 0x72, 0x6f, 0x70, 0x64, 0x6f, 0x77, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x64, 0x72, 0x6f,
	0x70, 0x64, 0x6f, 0x77, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x74, 0x61, 0x6b, 0x2e, 0x73, 0x68,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x48, 0x01, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x88, 0x01, 0x01, 0x1a,
	0xb7, 0x05, 0x0a, 0x08, 0x44, 0x72, 0x6f, 0x70, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x4e, 0x0a, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x74, 0x61, 0x6b, 0x2e, 0x73, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x64, 0x6f, 0x77, 0x6e, 0x2e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4f, 0x0a, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x74, 0x61, 0x6b,
	0x2e, 0x73, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x2e, 0x44, 0x72, 0x6f, 0x70, 0x64, 0x6f, 0x77, 0x6e, 0x2e, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x70,
	0x65, 0x63, 0x48, 0x00, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x4f, 0x0a,
	0x05, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x74,
	0x61, 0x6b, 0x2e, 0x73, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x64, 0x6f, 0x77, 0x6e, 0x2e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x52, 0x05, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x1a, 0x96,
	0x01, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x1b, 0x0a, 0x06, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x00, 0x52, 0x06, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01,
	0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x68, 0x69, 0x64, 0x64, 0x65,
	0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x1a, 0x77, 0x0a, 0x0b, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x66, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x66, 0x88, 0x01, 0x01, 0x12, 0x4c, 0x0a, 0x06, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x74, 0x61,
	0x6b, 0x2e, 0x73, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x64, 0x6f, 0x77, 0x6e, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x66,
	0x1a, 0x9d, 0x01, 0x0a, 0x08, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x70, 0x65, 0x63, 0x12, 0x43, 0x0a,
	0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x74, 0x61, 0x6b, 0x2e, 0x73, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x45, 0x61, 0x63, 0x68,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x4c, 0x0a, 0x06, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x34, 0x2e, 0x74, 0x61, 0x6b, 0x2e, 0x73, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x64, 0x6f, 0x77,
	0x6e, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x1a, 0x6c, 0x0a, 0x05, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x43, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2f, 0x2e, 0x74, 0x61, 0x6b, 0x2e, 0x73, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x1e, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x54, 0x45, 0x58, 0x54, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x41, 0x53,
	0x53, 0x57, 0x4f, 0x52, 0x44, 0x10, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x72, 0x6f, 0x70,
	0x64, 0x6f, 0x77, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x42,
	0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x15, 0x0a, 0x03, 0x73, 0x74, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x73, 0x74, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x74, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x74, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x73,
	0x74, 0x72, 0x22, 0x50, 0x0a, 0x0c, 0x45, 0x61, 0x63, 0x68, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x22, 0xc8, 0x02, 0x0a, 0x14, 0x48, 0x54, 0x4d, 0x4c, 0x4e, 0x6f, 0x64,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x50, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3a, 0x2e, 0x74, 0x61, 0x6b, 0x2e, 0x73, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x48, 0x54, 0x4d,
	0x4c, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x61, 0x74,
	0x74, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x3b, 0x0a,
	0x09, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x1a, 0x73, 0x0a, 0x0a, 0x41, 0x74,
	0x74, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x4f, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x74, 0x61, 0x6b, 0x2e,
	0x73, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x48, 0x54, 0x4d, 0x4c, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x41, 0x0a, 0x13, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x22, 0xfd, 0x02, 0x0a, 0x12, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4b, 0x0a, 0x04, 0x73, 0x74, 0x65,
	0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x74, 0x61, 0x6b, 0x2e, 0x73, 0x68,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x48, 0x0a, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x74, 0x61, 0x6b, 0x2e, 0x73, 0x68,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72,
	0x12, 0x49, 0x0a, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x74, 0x61, 0x6b, 0x2e, 0x73, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x48, 0x54,
	0x4d, 0x4c, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x06, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x74, 0x61,
	0x6b, 0x2e, 0x73, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x64, 0x6f, 0x77, 0x6e, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x37, 0x0a, 0x09, 0x53, 0x74, 0x65,
	0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xca, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x66, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x66, 0x12, 0x4b, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x74, 0x61, 0x6b, 0x2e, 0x73,
	0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x06, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x88, 0x01, 0x01, 0x22, 0x2d, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x0b,
	0x0a, 0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x10, 0x02, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0xec, 0x01, 0x0a, 0x1d, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x61, 0x6b, 0x2e, 0x73, 0x68, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x42, 0x0b, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x61, 0x6b,
	0x2d, 0x73, 0x68, 0x2f, 0x74, 0x61, 0x6b, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2f,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xa2, 0x02, 0x04, 0x54, 0x53, 0x41, 0x53, 0xaa, 0x02,
	0x19, 0x54, 0x61, 0x6b, 0x2e, 0x53, 0x68, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x2e, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xca, 0x02, 0x19, 0x54, 0x61, 0x6b,
	0x5c, 0x53, 0x68, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5c, 0x56,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xe2, 0x02, 0x25, 0x54, 0x61, 0x6b, 0x5c, 0x53, 0x68, 0x5c,
	0x41, 0x70, 0x69, 0x5c, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x1d, 0x54, 0x61, 0x6b, 0x3a, 0x3a, 0x53, 0x68, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_script_v1beta1_script_proto_rawDescOnce sync.Once
	file_api_script_v1beta1_script_proto_rawDescData = file_api_script_v1beta1_script_proto_rawDesc
)

func file_api_script_v1beta1_script_proto_rawDescGZIP() []byte {
	file_api_script_v1beta1_script_proto_rawDescOnce.Do(func() {
		file_api_script_v1beta1_script_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_script_v1beta1_script_proto_rawDescData)
	})
	return file_api_script_v1beta1_script_proto_rawDescData
}

var file_api_script_v1beta1_script_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_script_v1beta1_script_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_api_script_v1beta1_script_proto_goTypes = []any{
	(Component_Input_Type)(0),              // 0: tak.sh.api.script.v1beta1.Component.Input.Type
	(ConditionalSignal_Signal)(0),          // 1: tak.sh.api.script.v1beta1.ConditionalSignal.Signal
	(*Script)(nil),                         // 2: tak.sh.api.script.v1beta1.Script
	(*Step)(nil),                           // 3: tak.sh.api.script.v1beta1.Step
	(*Action)(nil),                         // 4: tak.sh.api.script.v1beta1.Action
	(*Prompt)(nil),                         // 5: tak.sh.api.script.v1beta1.Prompt
	(*Component)(nil),                      // 6: tak.sh.api.script.v1beta1.Component
	(*Value)(nil),                          // 7: tak.sh.api.script.v1beta1.Value
	(*EachSelector)(nil),                   // 8: tak.sh.api.script.v1beta1.EachSelector
	(*HTMLNodeTemplateData)(nil),           // 9: tak.sh.api.script.v1beta1.HTMLNodeTemplateData
	(*BrowserTemplateData)(nil),            // 10: tak.sh.api.script.v1beta1.BrowserTemplateData
	(*ScriptTemplateData)(nil),             // 11: tak.sh.api.script.v1beta1.ScriptTemplateData
	(*ConditionalSignal)(nil),              // 12: tak.sh.api.script.v1beta1.ConditionalSignal
	(*Action_Value)(nil),                   // 13: tak.sh.api.script.v1beta1.Action.Value
	(*Action_MouseClick)(nil),              // 14: tak.sh.api.script.v1beta1.Action.MouseClick
	(*Action_Input)(nil),                   // 15: tak.sh.api.script.v1beta1.Action.Input
	(*Action_Nav)(nil),                     // 16: tak.sh.api.script.v1beta1.Action.Nav
	(*Action_PromptUser)(nil),              // 17: tak.sh.api.script.v1beta1.Action.PromptUser
	(*Action_Branch)(nil),                  // 18: tak.sh.api.script.v1beta1.Action.Branch
	(*Component_Dropdown)(nil),             // 19: tak.sh.api.script.v1beta1.Component.Dropdown
	(*Component_Input)(nil),                // 20: tak.sh.api.script.v1beta1.Component.Input
	(*Component_Dropdown_Option)(nil),      // 21: tak.sh.api.script.v1beta1.Component.Dropdown.Option
	(*Component_Dropdown_OptionMerge)(nil), // 22: tak.sh.api.script.v1beta1.Component.Dropdown.OptionMerge
	(*Component_Dropdown_FromSpec)(nil),    // 23: tak.sh.api.script.v1beta1.Component.Dropdown.FromSpec
	(*HTMLNodeTemplateData_Attribute)(nil), // 24: tak.sh.api.script.v1beta1.HTMLNodeTemplateData.Attribute
	nil,                                    // 25: tak.sh.api.script.v1beta1.HTMLNodeTemplateData.AttrsEntry
	nil,                                    // 26: tak.sh.api.script.v1beta1.ScriptTemplateData.StepEntry
}
var file_api_script_v1beta1_script_proto_depIdxs = []int32{
	3,  // 0: tak.sh.api.script.v1beta1.Script.steps:type_name -> tak.sh.api.script.v1beta1.Step
	12, // 1: tak.sh.api.script.v1beta1.Script.signals:type_name -> tak.sh.api.script.v1beta1.ConditionalSignal
	4,  // 2: tak.sh.api.script.v1beta1.Step.action:type_name -> tak.sh.api.script.v1beta1.Action
	12, // 3: tak.sh.api.script.v1beta1.Step.signals:type_name -> tak.sh.api.script.v1beta1.ConditionalSignal
	14, // 4: tak.sh.api.script.v1beta1.Action.mouse_click:type_name -> tak.sh.api.script.v1beta1.Action.MouseClick
	15, // 5: tak.sh.api.script.v1beta1.Action.input:type_name -> tak.sh.api.script.v1beta1.Action.Input
	17, // 6: tak.sh.api.script.v1beta1.Action.ask:type_name -> tak.sh.api.script.v1beta1.Action.PromptUser
	16, // 7: tak.sh.api.script.v1beta1.Action.nav:type_name -> tak.sh.api.script.v1beta1.Action.Nav
	18, // 8: tak.sh.api.script.v1beta1.Action.branch:type_name -> tak.sh.api.script.v1beta1.Action.Branch
	6,  // 9: tak.sh.api.script.v1beta1.Prompt.component:type_name -> tak.sh.api.script.v1beta1.Component
	19, // 10: tak.sh.api.script.v1beta1.Component.dropdown:type_name -> tak.sh.api.script.v1beta1.Component.Dropdown
	20, // 11: tak.sh.api.script.v1beta1.Component.input:type_name -> tak.sh.api.script.v1beta1.Component.Input
	25, // 12: tak.sh.api.script.v1beta1.HTMLNodeTemplateData.attrs:type_name -> tak.sh.api.script.v1beta1.HTMLNodeTemplateData.AttrsEntry
	26, // 13: tak.sh.api.script.v1beta1.ScriptTemplateData.step:type_name -> tak.sh.api.script.v1beta1.ScriptTemplateData.StepEntry
	10, // 14: tak.sh.api.script.v1beta1.ScriptTemplateData.browser:type_name -> tak.sh.api.script.v1beta1.BrowserTemplateData
	9,  // 15: tak.sh.api.script.v1beta1.ScriptTemplateData.element:type_name -> tak.sh.api.script.v1beta1.HTMLNodeTemplateData
	21, // 16: tak.sh.api.script.v1beta1.ScriptTemplateData.option:type_name -> tak.sh.api.script.v1beta1.Component.Dropdown.Option
	1,  // 17: tak.sh.api.script.v1beta1.ConditionalSignal.signal:type_name -> tak.sh.api.script.v1beta1.ConditionalSignal.Signal
	5,  // 18: tak.sh.api.script.v1beta1.Action.PromptUser.prompt:type_name -> tak.sh.api.script.v1beta1.Prompt
	3,  // 19: tak.sh.api.script.v1beta1.Action.Branch.steps:type_name -> tak.sh.api.script.v1beta1.Step
	21, // 20: tak.sh.api.script.v1beta1.Component.Dropdown.options:type_name -> tak.sh.api.script.v1beta1.Component.Dropdown.Option
	23, // 21: tak.sh.api.script.v1beta1.Component.Dropdown.from:type_name -> tak.sh.api.script.v1beta1.Component.Dropdown.FromSpec
	22, // 22: tak.sh.api.script.v1beta1.Component.Dropdown.merge:type_name -> tak.sh.api.script.v1beta1.Component.Dropdown.OptionMerge
	0,  // 23: tak.sh.api.script.v1beta1.Component.Input.type:type_name -> tak.sh.api.script.v1beta1.Component.Input.Type
	21, // 24: tak.sh.api.script.v1beta1.Component.Dropdown.OptionMerge.option:type_name -> tak.sh.api.script.v1beta1.Component.Dropdown.Option
	8,  // 25: tak.sh.api.script.v1beta1.Component.Dropdown.FromSpec.selector:type_name -> tak.sh.api.script.v1beta1.EachSelector
	21, // 26: tak.sh.api.script.v1beta1.Component.Dropdown.FromSpec.mapper:type_name -> tak.sh.api.script.v1beta1.Component.Dropdown.Option
	24, // 27: tak.sh.api.script.v1beta1.HTMLNodeTemplateData.AttrsEntry.value:type_name -> tak.sh.api.script.v1beta1.HTMLNodeTemplateData.Attribute
	28, // [28:28] is the sub-list for method output_type
	28, // [28:28] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_api_script_v1beta1_script_proto_init() }
func file_api_script_v1beta1_script_proto_init() {
	if File_api_script_v1beta1_script_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_script_v1beta1_script_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Script); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_script_v1beta1_script_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Step); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_script_v1beta1_script_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_script_v1beta1_script_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Prompt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_script_v1beta1_script_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Component); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_script_v1beta1_script_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_script_v1beta1_script_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*EachSelector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_script_v1beta1_script_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*HTMLNodeTemplateData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_script_v1beta1_script_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*BrowserTemplateData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_script_v1beta1_script_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ScriptTemplateData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_script_v1beta1_script_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ConditionalSignal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_script_v1beta1_script_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*Action_Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_script_v1beta1_script_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*Action_MouseClick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_script_v1beta1_script_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*Action_Input); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_script_v1beta1_script_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*Action_Nav); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_script_v1beta1_script_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*Action_PromptUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_script_v1beta1_script_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*Action_Branch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_script_v1beta1_script_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*Component_Dropdown); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_script_v1beta1_script_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*Component_Input); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_script_v1beta1_script_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*Component_Dropdown_Option); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_script_v1beta1_script_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*Component_Dropdown_OptionMerge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_script_v1beta1_script_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*Component_Dropdown_FromSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_script_v1beta1_script_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*HTMLNodeTemplateData_Attribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_script_v1beta1_script_proto_msgTypes[1].OneofWrappers = []any{}
	file_api_script_v1beta1_script_proto_msgTypes[2].OneofWrappers = []any{}
	file_api_script_v1beta1_script_proto_msgTypes[3].OneofWrappers = []any{}
	file_api_script_v1beta1_script_proto_msgTypes[4].OneofWrappers = []any{}
	file_api_script_v1beta1_script_proto_msgTypes[5].OneofWrappers = []any{}
	file_api_script_v1beta1_script_proto_msgTypes[10].OneofWrappers = []any{}
	file_api_script_v1beta1_script_proto_msgTypes[12].OneofWrappers = []any{}
	file_api_script_v1beta1_script_proto_msgTypes[17].OneofWrappers = []any{}
	file_api_script_v1beta1_script_proto_msgTypes[19].OneofWrappers = []any{}
	file_api_script_v1beta1_script_proto_msgTypes[20].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_script_v1beta1_script_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_script_v1beta1_script_proto_goTypes,
		DependencyIndexes: file_api_script_v1beta1_script_proto_depIdxs,
		EnumInfos:         file_api_script_v1beta1_script_proto_enumTypes,
		MessageInfos:      file_api_script_v1beta1_script_proto_msgTypes,
	}.Build()
	File_api_script_v1beta1_script_proto = out.File
	file_api_script_v1beta1_script_proto_rawDesc = nil
	file_api_script_v1beta1_script_proto_goTypes = nil
	file_api_script_v1beta1_script_proto_depIdxs = nil
}
