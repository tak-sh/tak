// Code generated by mockery v2.43.2. DO NOT EDIT.

package enginemocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// PageRefresher is an autogenerated mock type for the PageRefresher type
type PageRefresher struct {
	mock.Mock
}

type PageRefresher_Expecter struct {
	mock *mock.Mock
}

func (_m *PageRefresher) EXPECT() *PageRefresher_Expecter {
	return &PageRefresher_Expecter{mock: &_m.Mock}
}

// RefreshPage provides a mock function with given fields: ctx, content
func (_m *PageRefresher) RefreshPage(ctx context.Context, content *string) error {
	ret := _m.Called(ctx, content)

	if len(ret) == 0 {
		panic("no return value specified for RefreshPage")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *string) error); ok {
		r0 = rf(ctx, content)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// PageRefresher_RefreshPage_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RefreshPage'
type PageRefresher_RefreshPage_Call struct {
	*mock.Call
}

// RefreshPage is a helper method to define mock.On call
//   - ctx context.Context
//   - content *string
func (_e *PageRefresher_Expecter) RefreshPage(ctx interface{}, content interface{}) *PageRefresher_RefreshPage_Call {
	return &PageRefresher_RefreshPage_Call{Call: _e.mock.On("RefreshPage", ctx, content)}
}

func (_c *PageRefresher_RefreshPage_Call) Run(run func(ctx context.Context, content *string)) *PageRefresher_RefreshPage_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*string))
	})
	return _c
}

func (_c *PageRefresher_RefreshPage_Call) Return(_a0 error) *PageRefresher_RefreshPage_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *PageRefresher_RefreshPage_Call) RunAndReturn(run func(context.Context, *string) error) *PageRefresher_RefreshPage_Call {
	_c.Call.Return(run)
	return _c
}

// NewPageRefresher creates a new instance of PageRefresher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPageRefresher(t interface {
	mock.TestingT
	Cleanup(func())
}) *PageRefresher {
	mock := &PageRefresher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
